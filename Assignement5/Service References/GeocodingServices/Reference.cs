//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignement5.GeocodingServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GeocodingServices.IGeocoding")]
    public interface IGeocoding {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocoding/GetlocationWithAddress", ReplyAction="http://tempuri.org/IGeocoding/GetlocationWithAddressResponse")]
        string GetlocationWithAddress(string Address1, string Address2, string City, string State, string Zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeocoding/GetlocationWithAddress", ReplyAction="http://tempuri.org/IGeocoding/GetlocationWithAddressResponse")]
        System.Threading.Tasks.Task<string> GetlocationWithAddressAsync(string Address1, string Address2, string City, string State, string Zipcode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGeocodingChannel : Assignement5.GeocodingServices.IGeocoding, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GeocodingClient : System.ServiceModel.ClientBase<Assignement5.GeocodingServices.IGeocoding>, Assignement5.GeocodingServices.IGeocoding {
        
        public GeocodingClient() {
        }
        
        public GeocodingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GeocodingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeocodingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeocodingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetlocationWithAddress(string Address1, string Address2, string City, string State, string Zipcode) {
            return base.Channel.GetlocationWithAddress(Address1, Address2, City, State, Zipcode);
        }
        
        public System.Threading.Tasks.Task<string> GetlocationWithAddressAsync(string Address1, string Address2, string City, string State, string Zipcode) {
            return base.Channel.GetlocationWithAddressAsync(Address1, Address2, City, State, Zipcode);
        }
    }
}
